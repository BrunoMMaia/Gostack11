{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documentos/TESTE/Gostack11/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from \"../../services/api\";\nimport { Link } from 'react-router-dom';\nimport { Title, Form, Repositories, Error } from './styles';\nimport logoImg from \"../../assets/logo.svg\";\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState(() => {\n    const storagedRepositories = localStorage.getItem('@GithubExplore:reopositories');\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    } else {\n      return [];\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem('@GithubExplore:reopositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Explere reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }\n  }, inputError, \" \"), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(Link, {\n    key: repository.full_name,\n    to: `/repositories/${repository.full_name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/bruno/Documentos/TESTE/Gostack11/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","api","Link","Title","Form","Repositories","Error","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","storagedRepositories","localStorage","getItem","JSON","parse","setItem","stringify","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from \"../../services/api\";\nimport { Link } from 'react-router-dom';\nimport { Title, Form, Repositories, Error } from './styles';\n\nimport logoImg from '../../assets/logo.svg'\n\ninterface Repository{\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo ] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>(()=>{\n    const storagedRepositories = localStorage.getItem('@GithubExplore:reopositories');\n\n    if (storagedRepositories) {\n      return JSON.parse(storagedRepositories);\n    } else {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplore:reopositories',\n       JSON.stringify(repositories),\n       );\n  }, [repositories]);\n\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>): Promise<void> {\n    event.preventDefault();\n    \n    if(!newRepo){\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n      const repository = response.data;\n\n      setRepositories([ ... repositories,  repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err){\n      setInputError('Erro na busca por esse repositório.');\n    }\n\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explere repositórios no Github</Title>\n\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input \n        value={newRepo}\n        onChange={(e) => setNewRepo(e.target.value)}\n        placeholder='Digite o nome do repositório' />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError} </Error> }\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link key={repository.full_name} \n          to={`/repositories/${repository.full_name}`}>\n            <img \n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </Link>          \n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}